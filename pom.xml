<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>io.phasetwo.keycloak</groupId>
  <artifactId>keycloak-jpa-cache</artifactId>
  <version>0.1-SNAPSHOT</version>
  <packaging>jar</packaging>
  <name>keycloak-jpa-cache</name>
  <description>Keycloak cache replacement using JPA</description>

  <parent>
    <groupId>com.github.xgp</groupId>
    <artifactId>oss-parent</artifactId>
    <version>0.7</version>
  </parent>
  
  <developers>
    <developer>
      <name>Phase Two, Inc.</name>
      <url>https://github.com/p2-inc</url>
    </developer>
  </developers>

  <licenses>
    <license>
      <name>Apache-2.0</name>
      <url>https://www.apache.org/licenses/LICENSE-2.0.txt</url>
    </license>
  </licenses>

  <scm>
    <url>https://github.com/p2-inc/keycloak-jpa-cache</url>
    <connection>scm:git:git@github.com:p2-inc/keycloak-jpa-cache.git</connection>
    <tag>HEAD</tag>
  </scm>

  <properties>
    <java.version>17</java.version>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <main.java.package>io.phasetwo.keycloak.jpacache</main.java.package>
    <junit.version>5.8.2</junit.version>
    <keycloak.version>24.0.2</keycloak.version>
    <lombok.version>1.18.30</lombok.version>
    <auto-service.version>1.1.1</auto-service.version>
    <testcontainers-keycloak.version>1.17.6</testcontainers-keycloak.version>
    <ossrh.url>https://s01.oss.sonatype.org</ossrh.url>
    <maven.compiler.source>${java.version}</maven.compiler.source>
    <maven.compiler.target>${java.version}</maven.compiler.target>

    <!-- surfire testing -->
    <surefire.memory.Xms>512m</surefire.memory.Xms>
    <surefire.memory.Xmx>2048m</surefire.memory.Xmx>
    <surefire.memory.metaspace>96m</surefire.memory.metaspace>
    <surefire.memory.metaspace.max>512m</surefire.memory.metaspace.max>
    <surefire.memory.settings>-Xms${surefire.memory.Xms} -Xmx${surefire.memory.Xmx} -XX:MetaspaceSize=${surefire.memory.metaspace} -XX:MaxMetaspaceSize=${surefire.memory.metaspace.max}</surefire.memory.settings>
    <surefire.system.args></surefire.system.args>

    <!-- testing property vars -->
    <keycloak.connectionsJpa.driver>org.h2.Driver</keycloak.connectionsJpa.driver>
    <keycloak.connectionsJpa.database>keycloak</keycloak.connectionsJpa.database>
    <keycloak.connectionsJpa.user>sa</keycloak.connectionsJpa.user>
    <keycloak.connectionsJpa.password></keycloak.connectionsJpa.password>
    <keycloak.connectionsJpa.url>jdbc:h2:mem:test;DB_CLOSE_DELAY=-1</keycloak.connectionsJpa.url>
    <jdbc.mvn.groupId>com.h2database</jdbc.mvn.groupId>
    <jdbc.mvn.artifactId>h2</jdbc.mvn.artifactId>
    <jdbc.mvn.version>2.2.224</jdbc.mvn.version>
    <jacoco.skip>true</jacoco.skip>
    <smallrye.jandex.version>3.0.5</smallrye.jandex.version>
    <keycloak.userSessions.infinispan.preloadOfflineSessionsFromDatabase>false</keycloak.userSessions.infinispan.preloadOfflineSessionsFromDatabase>
  </properties>

  <build>
    <sourceDirectory>src/main/java</sourceDirectory>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.11.0</version>
        <configuration>
	  <forceJavacCompilerUse>true</forceJavacCompilerUse>
          <source>${java.version}</source>
          <target>${java.version}</target>
	  <compilerArgument>-Xlint:unchecked</compilerArgument>
	  <compilerArgument>-Xlint:deprecation</compilerArgument>
          <useIncrementalCompilation>false</useIncrementalCompilation>
	  <annotationProcessorPaths>
            <path>
	      <groupId>com.google.auto.service</groupId>
	      <artifactId>auto-service</artifactId>
	      <version>${auto-service.version}</version>
            </path>
            <path>
              <groupId>org.projectlombok</groupId>
              <artifactId>lombok</artifactId>
              <version>${lombok.version}</version>
            </path>
          </annotationProcessorPaths>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>buildnumber-maven-plugin</artifactId>
        <version>1.4</version>
        <executions>
          <execution>
            <id>detect-scm-revision</id>
            <phase>validate</phase>
            <goals>
              <goal>create</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <getRevisionOnlyOnce>true</getRevisionOnlyOnce>
          <shortRevisionLength>8</shortRevisionLength>
          <doCheck>false</doCheck>
          <doUpdate>false</doUpdate>
          <timestampFormat>{0,date,yyyyMMdd}</timestampFormat>
        </configuration>
      </plugin>
      <plugin>
        <groupId>com.fizzed</groupId>
        <artifactId>fizzed-versionizer-maven-plugin</artifactId>
        <version>1.0.6</version>
        <executions>
          <execution>
            <id>generate-version-class</id>
            <goals>
              <goal>generate</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <javaPackage>${main.java.package}</javaPackage>
          <versionCommit>${buildNumber}</versionCommit>
        </configuration>
      </plugin>
      <plugin> <!-- pretty up the code using google java standards `mvn fmt:format` -->
        <groupId>com.spotify.fmt</groupId>
        <artifactId>fmt-maven-plugin</artifactId>
        <version>2.21.1</version>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>3.1.2</version>
        <configuration>
          <forkMode>once</forkMode>
	  <forkCount>0</forkCount>
          <argLine>@{argLine}</argLine>
          <runOrder>alphabetical</runOrder>
          <failIfNoSpecifiedTests>false</failIfNoSpecifiedTests>
          <parallelTestsTimeoutInSeconds>360</parallelTestsTimeoutInSeconds>
          <systemPropertyVariables>
            <!-- keycloak.model.parameters lists parameter classes from
                 org.keycloak.model.parameters package and determine enabled providers -->
            <kc.community.jpa.cache.enabled>true</kc.community.jpa.cache.enabled>
            <keycloak.model.parameters>JpaCacheParameters</keycloak.model.parameters>
            <keycloak.connectionsJpa.default.driver>${keycloak.connectionsJpa.driver}</keycloak.connectionsJpa.default.driver>
            <keycloak.connectionsJpa.default.database>${keycloak.connectionsJpa.database}</keycloak.connectionsJpa.default.database>
            <keycloak.connectionsJpa.default.user>${keycloak.connectionsJpa.user}</keycloak.connectionsJpa.default.user>
            <keycloak.connectionsJpa.default.password>${keycloak.connectionsJpa.password}</keycloak.connectionsJpa.default.password>
            <keycloak.connectionsJpa.default.url>${keycloak.connectionsJpa.url}</keycloak.connectionsJpa.default.url>
            <log4j.configuration>file:${project.build.directory}/test-classes/log4j.properties</log4j.configuration> <!-- for the logging to properly work with tests in the 'other' module -->
            <keycloak.userSessions.infinispan.preloadOfflineSessionsFromDatabase>${keycloak.userSessions.infinispan.preloadOfflineSessionsFromDatabase}</keycloak.userSessions.infinispan.preloadOfflineSessionsFromDatabase>
            <keycloak.profile.feature.authorization>disabled</keycloak.profile.feature.authorization>
            <java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>
            <org.jboss.logging.provider>log4j</org.jboss.logging.provider>
            <argLine>-Djava.awt.headless=true ${surefire.memory.settings} ${surefire.system.args}
            -Duser.language=en -Duser.region=US
            </argLine>
          </systemPropertyVariables>
          <properties>
            <property>
              <name>listener</name>
              <value>io.phasetwo.keycloak.jpacache.testsuite.AfterSuiteListener</value>
            </property>
          </properties>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-antrun-plugin</artifactId>
        <executions>
          <execution>
            <phase>process-test-resources</phase>
            <goals>
              <goal>run</goal>
            </goals>
            <configuration>
              <target>
                <delete>
                  <fileset dir="${project.build.directory}" includes="map-*.json"/>
                  <fileset dir="${project.build.directory}" includes="map/**/*.json"/>
                </delete>
              </target>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>      
  </build>

  <dependencies>
    <!-- annotation processing helpers for logging and services -->
    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok</artifactId>
      <version>${lombok.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>com.google.auto.service</groupId>
      <artifactId>auto-service</artifactId>
      <version>${auto-service.version}</version>
      <scope>provided</scope>
    </dependency>

    <!-- keycloak deps -->
    <dependency>
      <groupId>org.keycloak</groupId>
      <artifactId>keycloak-server-spi-private</artifactId>
      <version>${keycloak.version}</version>
    </dependency>
    <dependency>
      <groupId>org.keycloak</groupId>
      <artifactId>keycloak-server-spi</artifactId>
      <version>${keycloak.version}</version>
    </dependency>
    <dependency>
      <groupId>org.keycloak</groupId>
      <artifactId>keycloak-model-storage</artifactId>
      <version>${keycloak.version}</version>
    </dependency>
    <dependency>
      <groupId>org.keycloak</groupId>
      <artifactId>keycloak-model-infinispan</artifactId>
      <version>${keycloak.version}</version>
    </dependency>
    <dependency>
      <groupId>org.keycloak</groupId>
      <artifactId>keycloak-model-jpa</artifactId>
      <version>${keycloak.version}</version>
    </dependency>
    <dependency>
      <groupId>org.keycloak</groupId>
      <artifactId>keycloak-model-storage-private</artifactId>
      <version>${keycloak.version}</version>
    </dependency>
    <dependency>
      <groupId>org.keycloak</groupId>
      <artifactId>keycloak-services</artifactId>
      <version>${keycloak.version}</version>
    </dependency>
    <dependency>
      <groupId>org.keycloak</groupId>
      <artifactId>keycloak-common</artifactId>
      <version>${keycloak.version}</version>
    </dependency>
    <dependency>
      <groupId>org.keycloak</groupId>
      <artifactId>keycloak-core</artifactId>
      <version>${keycloak.version}</version>
    </dependency>

    
    <!-- javax/jakarta apis -->
    <dependency>
      <groupId>jakarta.persistence</groupId>
      <artifactId>jakarta.persistence-api</artifactId>
      <version>3.1.0</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>io.smallrye</groupId>
      <artifactId>jandex</artifactId>
      <version>${smallrye.jandex.version}</version>
    </dependency>

    <!-- testing -->
    <dependency>
      <groupId>org.keycloak</groupId>
      <artifactId>keycloak-quarkus-server</artifactId>
      <version>${keycloak.version}</version>
      <scope>test</scope>
      <exclusions>
        <exclusion>
          <groupId>org.keycloak</groupId>
          <artifactId>keycloak-crypto-fips1402</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.testcontainers</groupId>
      <artifactId>testcontainers</artifactId>
      <version>${testcontainers-keycloak.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.13.2</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.hamcrest</groupId>
      <artifactId>hamcrest</artifactId>
      <version>2.2</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

</project>
