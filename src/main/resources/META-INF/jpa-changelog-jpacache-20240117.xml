<?xml version="1.1" encoding="UTF-8" standalone="no"?>
<databaseChangeLog xmlns="http://www.liquibase.org/xml/ns/dbchangelog" xmlns:ext="http://www.liquibase.org/xml/ns/dbchangelog-ext" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog-ext http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-ext.xsd http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.5.xsd">
  <changeSet author="xgp" id="20240117-001">
    <createTable tableName="CACHE_AUTH_SESSION">
      <column name="ID" type="VARCHAR(36)">
        <constraints nullable="false"/>
      </column>
      <column name="PARENT_SESSION_ID" type="VARCHAR(36)"/>
      <column name="TAB_ID" type="VARCHAR(36)"/>
      <column name="ACTION" type="VARCHAR(36)"/>
      <column name="CLIENT_ID" type="VARCHAR(36)"/>
      <column name="PROTOCOL" type="VARCHAR(36)"/>
      <column name="REDIRECT_URI" type="VARCHAR(4096)"/>
      <column name="USER_ID" type="VARCHAR(36)"/>
      <column name="TIMESTAMP" type="TIMESTAMP"/>
    </createTable>
  </changeSet>

  <changeSet author="xgp" id="20240117-101">
    <createTable tableName="CACHE_ROOT_AUTH_SESSION">
      <column name="ID" type="VARCHAR(36)">
        <constraints nullable="false"/>
      </column>
      <column name="REALM_ID" type="VARCHAR(36)"/>
      <column name="EXPIRATION" type="TIMESTAMP"/>
      <column name="TIMESTAMP" type="INT"/>
    </createTable>
  </changeSet>

  <changeSet author="xgp" id="20240117-501">
    <createTable tableName="CACHE_LOGIN_FAILURE">
      <column name="ID" type="VARCHAR(36)">
        <constraints nullable="false"/>
      </column>
      <column name="REALM_ID" type="VARCHAR(36)"/>
      <column name="USER_ID" type="VARCHAR(36)"/>
      <column name="NUM_FAILURES" type="INT"/>
      <column name="FAILED_LOGIN_NOT_BEFORE" type="TIMESTAMP"/>
      <column name="LAST_FAILURE" type="TIMESTAMP"/>
      <column name="LAST_IP_FAILURE" type="VARCHAR(15)"/>
    </createTable>
  </changeSet>

  <changeSet author="xgp" id="20240117-601">
    <createTable tableName="CACHE_SINGLE_USE_OBJECT">
      <column name="ID" type="VARCHAR(36)">
        <constraints nullable="false"/>
      </column>
      <column name="KEY" type="VARCHAR(1024)">
	<constraints nullable="false" unique="true" uniqueConstraintName="UQ_CACHE_SINGLE_USE_OBJECT_KEY"/>
      </column>
      <column name="EXPIRES_AT" type="TIMESTAMP"/>
    </createTable>
  </changeSet>
  <changeSet author="xgp" id="20240117-602">
    <createTable tableName="CACHE_SINGLE_USE_OBJECT_NOTE">
      <column name="ID" type="VARCHAR(36)">
        <constraints nullable="false"/>
      </column>
      <column name="SINGLE_USE_OBJECT_ID" type="VARCHAR(36)"/>
      <column name="NAME" type="VARCHAR(1024)"/>
      <column name="VALUE" type="CLOB"/>
    </createTable>
  </changeSet>

  <!--

CREATE TABLE IF NOT EXISTS attributes_to_user_sessions (
    attribute_name text,
    attribute_value text,
    user_session_id text,
    PRIMARY KEY (attribute_name, attribute_value, user_session_id)
) WITH CLUSTERING ORDER BY (attribute_value ASC, user_session_id ASC);

CREATE TABLE IF NOT EXISTS authentication_sessions (
    parent_session_id text,
    tab_id text,
    action text,
    client_id text,
    protocol text,
    redirect_uri text,
    timestamp bigint,
    user_id text,
    auth_notes map<text, text>,
    client_notes map<text, text>,
    client_scopes set<text>,
    execution_status map<text, text>,
    required_actions set<text>,
    user_notes map<text, text>,
    PRIMARY KEY (parent_session_id, tab_id)
) WITH CLUSTERING ORDER BY (tab_id ASC);

CREATE TABLE IF NOT EXISTS user_sessions (
    id text PRIMARY KEY,
    auth_method text,
    broker_session_id text,
    broker_user_id text,
    expiration bigint,
    ip_address text,
    last_session_refresh bigint,
    login_username text,
    offline boolean,
    persistence_state text,
    realm_id text,
    remember_me boolean,
    state text,
    timestamp bigint,
    user_id text,
    client_sessions map<text, text>,
    notes map<text, text>
);

CREATE TABLE IF NOT EXISTS user_sessions_to_attributes (
    user_session_id text,
    attribute_name text,
    attribute_values list<text>,
    PRIMARY KEY (user_session_id, attribute_name)
) WITH CLUSTERING ORDER BY (attribute_name ASC);
  -->
</databaseChangeLog>
